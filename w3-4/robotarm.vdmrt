class robotarm

values
    q' : real = 10;
    M1 : real = 90;
    M2 : real = 5;
    target : real = 45;

instance variables
    q : seq of real;
    now : seq of real;
    public motor_state: seq of nat;
    public motor_direction: seq of real;


operations
    
    public robotarm: () ==> robotarm
    robotarm() == (
        now := [0];
        q := [5];
        motor_state := [0];
        motor_direction := [1];
    );

    -- -1 CClockwise / 1 Clockwise
    public control_direction_state: (real) ==> ()
    control_direction_state(dir) == duration(0) (
        now := [hd now] ^ now;
        q := [hd q] ^ q;
        motor_state := [hd motor_state] ^ motor_state;
        motor_direction := [dir] ^ motor_direction;
    )
    pre dir = 1 or dir = -1;

    -- 0 off / 1 on
    public control_motor_state: (real) ==> ()
    control_motor_state(s) == duration(0) (
        now := [hd now] ^ now;
        q := [hd q] ^ q;
        motor_state := [s] ^ motor_state;
        motor_direction := [hd motor_direction] ^ motor_direction;
    )
    pre s = 1 or s = 0;

    public step: (real) ==> ()
    step(delta) == duration(0) (
        dcl qd : real := hd motor_state * hd motor_direction * q' * delta; 
        q := [qd + hd q] ^ q;
        now := [hd now + delta] ^ now;
        motor_state := [hd motor_state] ^ motor_state;
        motor_direction := [hd motor_direction] ^ motor_direction;
    );
    

end robotarm 
